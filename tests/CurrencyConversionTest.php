<?php
use PHPUnit\Framework\TestCase;

require_once "utils/processInputString.php";
require_once 'CurrencyExchange.php';
require_once "utils/fetchAndUpdateConversionData.php";

$sample_xml_data_original = <<<XML
<?xml version="1.0"?>
<response>
<conversion>
	<currency>JPY</currency>
	<rate>0.013125</rate>
</conversion>
<conversion>
	<currency>BGN</currency>
	<rate>0.6707</rate>
</conversion>
<conversion>
	<currency>CZK</currency>
	<rate>0.05190</rate>
</conversion>
<conversion>
	<currency>ARS</currency>
	<rate>0.2294</rate>
</conversion>
<conversion>
	<currency>AUD</currency>
	<rate>1.0689</rate>
</conversion>
<conversion>
	<currency>CHF</currency>
	<rate>1.1154</rate>
</conversion>
</response>
XML;

$sample_xml_data_modified = <<<XML
<?xml version="1.0"?>
<response>
<conversion>
	<currency>JPY</currency>
	<rate>1.013125</rate>
</conversion>
<conversion>
	<currency>BGN</currency>
	<rate>0.6707</rate>
</conversion>
<conversion>
	<currency>CZK</currency>
	<rate>0.05190</rate>
</conversion>
<conversion>
	<currency>ARS</currency>
	<rate>0.2294</rate>
</conversion>
<conversion>
	<currency>AUD</currency>
	<rate>1.0689</rate>
</conversion>
<conversion>
	<currency>CHF</currency>
	<rate>1.1154</rate>
</conversion>
</response>
XML;

final class CurrencyConversionTest extends TestCase
{
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }


    public function testConversionStepsOnArrayInputs()
    {
        global $sample_xml_data_original, $sample_xml_data_modified;
        // Make sure we populate our db with a custom input
        $conversionData = simplexml_load_string($sample_xml_data_original);
        fetchAndUpdateConversionData($conversionData);
        $inputString = "array( 'JPY 5000', 'CZK 62.5' )";
        $output = processInputLineAndPrintResults($inputString);
        $this->assertEquals("array( 'USD 65.625', 'USD 3.24375' )", $output);

        // Now try some modifications on the XML
        $conversionData = simplexml_load_string($sample_xml_data_modified);
        fetchAndUpdateConversionData($conversionData);
        $inputString = "array( 'JPY 5000', 'CZK 62.5' )";
        $output = processInputLineAndPrintResults($inputString);
        // 1 JPY = 1.01 USD config
        $this->assertEquals("array( 'USD 5065.625', 'USD 3.24375' )", $output);
    }

    //	public function testConversionStepsOnNormalInputs() {
//		global $sample_xml_data_original, $sample_xml_data_modified;
//		// Make sure we populate our db with a custom input
//		$conversionData = simplexml_load_string($sample_xml_data_original);
//		fetchAndUpdateConversionData($conversionData);
//		$inputString = "'JPY 5000'";
//		$output = processInputLineAndPrintResults($inputString);
//		$this->assertEquals("'USD 65.625'", $output );
//
//		// Now try some modifications on the XML
//		$conversionData = simplexml_load_string($sample_xml_data_modified);
//		fetchAndUpdateConversionData($conversionData);
//		$inputString = "'JPY 5000'";
//		$output = processInputLineAndPrintResults($inputString);
//		// 1 JPY = 1.01 USD config
//		$this->assertEquals("'USD 5065.625'", $output );
//	}
}
